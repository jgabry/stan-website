---
pagetitle: "Get Stan"
page-layout: full
toc-location: right
toc-depth: 3
---
## Download and Install Stan

Stan is available for all major operating systems and has packages in several
popular languages. Most users can get started by just selecting their preferred
options in the grid below. If you don't see your exact set-up, see [Other Stan interfaces](#other-packages) below.



::: {#install-grid}
 <!-- Filled in by JS -->
:::

<!-- The following two boxes contain divs which are hidden/unhidden based on the above grid.
  They can contain normal markdown as we see fit
 -->
::: {#prerequsite-box .flex-grid}
:::: {.row-label}
Prerequisites
::::
:::: {.col .highlight-box}

::::: {.prereq #prereq-windows .hidden}
Stan requires a C++17 compiler and some additional tools for building. The `conda`
option of certain packages can install these for you, or we recommend RTools TODO
:::::

::::: {.prereq #prereq-macos .hidden}
Stan requires a C++17 compiler. The `conda` option of certain packages can install
this for you, or we recommend to install Xcode from the App Store and then run `xcode-select --install`.
:::::

::::: {.prereq #prereq-linux .hidden}
Stan requires a C++17 compiler. The `conda` option of certain packages can install
this for you, or on .deb based distros, `sudo apt-get install build-essential` will install what you need.
:::::

::::

:::

::: {#install-box .flex-grid}

:::: {.row-label}
How to Install
::::
:::: {.col .highlight-box}

::::: {.install #install-please-select}
Please select interface and preferred package manager.
:::::

<!-- ---------- CmdStanPy ---------- -->

::::: {.install #install-cmdstanpy-pip .hidden}
Run `pip install cmdstanpy`. Then, in Python, run
`import cmdstanpy; cmdstanpy.install_cmdstan()` or follow the manual
installation instructions for CmdStan.

For more information, see the
[CmdStanPy documentation](https://mc-stan.org/cmdstanpy/installation.html){target="_blank"}.
:::::

::::: {.install #install-cmdstanpy-conda .hidden}
Run `conda install -c conda-forge cmdstanpy`.

Note: this will also install CmdStan and any system prerequisites.
:::::

::::: {.install #install-cmdstanpy-github-src .hidden}
Run `pip install -e git+https://github.com/stan-dev/cmdstanpy@develop#egg=cmdstanpy`.
Then, in Python, run `import cmdstanpy; cmdstanpy.install_cmdstan()`
or follow the manual installation instructions for CmdStan.

For more information, see the
[CmdStanPy documentation](https://mc-stan.org/cmdstanpy/installation.html){target="_blank"}.
:::::

<!-- ---------- CmdStanR ---------- -->
::::: {.install #install-cmdstanr-runiverse .hidden}
In R, run `install.packages("cmdstanr", repos = c('https://stan-dev.r-universe.dev', getOption("repos")))`.
Then run `cmdstanr::install_cmdstan()` or follow the manual installation instructions for CmdStan.

For more information, see the
[CmdStanR documentation](https://mc-stan.org/cmdstanr/articles/cmdstanr.html#installing-cmdstan){target="_blank"}
:::::

::::: {.install #install-cmdstanr-conda .hidden}
Run `conda install -c conda-forge r-cmdstanr`.

Note: this will also install CmdStan and any system prerequesites.
:::::

::::: {.Install #install-cmdstanr-github-src .hidden}
In R, run `remotes::install_github("stan-dev/cmdstanr")`.
Then run `cmdstanr::install_cmdstan()` or follow the manual installation instructions for CmdStan.

For more information, see the
[CmdStanR documentation](https://mc-stan.org/cmdstanr/articles/cmdstanr.html#installing-cmdstan){target="_blank"}
:::::

<!-- ---------- CmdStan ---------- -->
::::: {.install #install-cmdstan-github-rel .hidden}
TODO 1
:::::
::::: {.install #install-cmdstan-conda .hidden}
TODO 2
:::::
::::: {.install #install-cmdstan-github-src .hidden}
TODO 3
:::::
<!-- ---------- RStan ---------- -->
::::: {.install #install-rstan-cran .hidden}
TODO 7
:::::
::::: {.install #install-rstan-runiverse .hidden}
TODO 8
:::::
::::: {.install #install-rstan-conda .hidden}
Run `conda install -c conda-forge r-rstan`.

Note: this will also install any system prerequesites.
:::::
::::: {.install #install-rstan-github-src .hidden}
TODO 9
:::::
<!-- ---------- Stan.jl ---------- -->
::::: {.install #install-stan.jl-julia-pkg .hidden}
TODO 10
:::::
::::: {.install #install-stan.jl-github-src .hidden}
TODO 11
:::::

::::
:::

<script src="installer.js"></script>



## Installers


#### Native installers:

* R users can use R's `install.packages()` function to manage libraries.
* Python users can use Python's `pip` utility.
* Julia users can manage packages with the built-in `Pkg` module using commands like `Pkg.add()`.

#### Conda

Conda simplifies the installation process by ensuring that all required libraries and tools are compatible with each other
and is available for Linux, Mac, and Windows platforms.
Conda is available from [Anaconda](anaconda.com) and [Miniconda](miniconda.com).

## Prerequisite:  C++

### C++ on Linux

The conda installers for CmdStan, CmdStanPy, and CmdStanR will install C++17 and GNU-Make utilities

For Debian-based distributions, run
```
sudo apt-get install build-essential
```

### C++ on MacOS

We strongly recommend installing Xcode from the Apple App Store.  Then run
```
xcode-select --install
```


### C++ on Windows

On a Windows 10 machine, we strongly recommend installing Anaconda.
R Users can also use the RTools distribution.


### C++ Libraries

- Boost
- Sundials
- TBB


## CmdStan-based Interfaces

Both CmdStanPy and CmdStanR require a local CmdStan installation and provide scripts and methods to manage this.
The default location is a hidden directory under the user's home directory named `.cmdstan`.
This directory contains one or more versions of CmdStan.

#### Building

- command shell

- from Python

- from R

#### Managing release versions

- CmdStanPy

- CmdStanR


## Other Stan Interfaces {#other-packages}

#### Google Colab

#### Mathematica

#### PyStan

PyStan is available from via pip:
```python
python3 -m pip install pystan
```

See [PyStan installation instructions](https://pystan.readthedocs.io/en/latest/installation.html) for further details.

::: {.callout-note}
As of Release 3.10.0, PyStan is no longer being actively supported.
:::

## Troubleshooting










