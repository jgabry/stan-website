---
pagetitle: "Get Stan"
page-layout: full
toc-location: right
toc-depth: 3
---
## Download and Install Stan

Stan is available for all major operating systems and several programming languages.
You can get started by selecting your OS, programming language interface, and preferred installation method in the grid below.
If you don't see your exact set-up, see [Other Stan interfaces](#other-packages) below.


::: {#install-grid}
 <!-- Filled in by JS -->
:::

<!-- The following two boxes contain divs which are hidden/unhidden based on the above grid.
  They can contain normal markdown as we see fit
 -->
::: {#prerequsite-box .flex-grid}
:::: {.row-label}
Prerequisites
::::
:::: {.col .highlight-box}

::::: {.prereq #prereq-windows .hidden}
Stan requires a C++17 compiler and some build utilities.. The `conda`
option of certain packages can install these for you, otherwise these are bundled together
by [Rtools](https://cran.r-project.org/bin/windows/Rtools/).
:::::

::::: {.prereq #prereq-macos .hidden}
Stan requires a C++17 compiler. The `conda` option of certain packages can install
this for you, or we recommend to install Xcode from the App Store and then run `xcode-select --install`.
:::::

::::: {.prereq #prereq-linux .hidden}
Stan requires a C++17 compiler. The `conda` option of certain packages can install
this for you, or on .deb based distros, `sudo apt-get install build-essential` will install what you need.
:::::

::::

:::

::: {#install-box .flex-grid}

:::: {.row-label}
How to Install
::::
:::: {.col .highlight-box}

::::: {.install #install-please-select}
Please select interface and preferred package manager.
:::::

<!-- ---------- CmdStanPy ---------- -->

::::: {.install #install-cmdstanpy-pip .hidden}
Run `pip install cmdstanpy`. Then, in Python, run
`import cmdstanpy; cmdstanpy.install_cmdstan()` or follow the manual
installation instructions for CmdStan.

For more information, see the
[CmdStanPy documentation](https://mc-stan.org/cmdstanpy/installation.html){target="_blank"}.
:::::

::::: {.install #install-cmdstanpy-conda .hidden}
Run `conda install -c conda-forge cmdstanpy`.

Note: this will also install CmdStan and any system prerequisites.
:::::

::::: {.install #install-cmdstanpy-github-src .hidden}
Run `pip install -e git+https://github.com/stan-dev/cmdstanpy@develop#egg=cmdstanpy`.
Then, in Python, run `import cmdstanpy; cmdstanpy.install_cmdstan()`
or follow the manual installation instructions for CmdStan.

For more information, see the
[CmdStanPy documentation](https://mc-stan.org/cmdstanpy/installation.html){target="_blank"}.
:::::

<!-- ---------- CmdStanR ---------- -->
::::: {.install #install-cmdstanr-runiverse .hidden}
In R, run `install.packages("cmdstanr", repos = c('https://stan-dev.r-universe.dev', getOption("repos")))`.
Then run `cmdstanr::install_cmdstan()` or follow the manual installation instructions for CmdStan.

For more information, see the
[CmdStanR documentation](https://mc-stan.org/cmdstanr/articles/cmdstanr.html#installing-cmdstan){target="_blank"}
:::::

::::: {.install #install-cmdstanr-conda .hidden}
Run `conda install -c conda-forge r-cmdstanr`.

Note: this will also install CmdStan and any system prerequisites.
:::::

::::: {.install #install-cmdstanr-github-src .hidden}
In R, run `remotes::install_github("stan-dev/cmdstanr")`.
Then run `cmdstanr::install_cmdstan()` or follow the manual installation instructions for CmdStan.

For more information, see the
[CmdStanR documentation](https://mc-stan.org/cmdstanr/articles/cmdstanr.html#installing-cmdstan){target="_blank"}
:::::

<!-- ---------- CmdStan ---------- -->
::::: {.install #install-cmdstan-github-rel .hidden}
Download a release from GitHub:  https://github.com/stan-dev/cmdstan/releases.

Then follow [these instructions to build CmdStan](https://mc-stan.org/docs/cmdstan-guide/installation.html#building-cmdstan){target="_blank"}.
:::::
::::: {.install #install-cmdstan-conda .hidden}
Run `conda install -c conda-forge cmdstan`.

Note: this will also install CmdStan and any system prerequisites.
:::::
::::: {.install #install-cmdstan-github-src .hidden}
Run `git clone https://github.com/stan-dev/cmdstan.git --recursive`

This will download the source code from the current development branch of CmdStan into a directory named cmdstan,
along with the submodules for core Stan code and the Stan math library.

Then follow [these instructions to build CmdStan](https://mc-stan.org/docs/cmdstan-guide/installation.html#building-cmdstan){target="_blank"}.
:::::
<!-- ---------- RStan ---------- -->
::::: {.install #install-rstan-cran .hidden}
In R, run `install.packages("rstan")`

For more information, see the
[RStan Getting Started wiki](https://github.com/stan-dev/rstan/wiki/RStan-Getting-Started){target="_blank"}
:::::
::::: {.install #install-rstan-runiverse .hidden}
In R, run `install.packages("rstan", repos = c('https://stan-dev.r-universe.dev', getOption("repos")))`.

For more information, see the
[RStan Getting Started wiki](https://github.com/stan-dev/rstan/wiki/RStan-Getting-Started){target="_blank"}
:::::
::::: {.install #install-rstan-conda .hidden}
Run `conda install -c conda-forge r-rstan`.

Note: this will also install any system prerequisites.
:::::
::::: {.install #install-rstan-github-src .hidden}
Run `git clone https://github.com/stan-dev/rstan.git --recursive`

For more information, see the
[RStan Getting Started wiki](https://github.com/stan-dev/rstan/wiki/RStan-Getting-Started){target="_blank"}
:::::
<!-- ---------- Stan.jl ---------- -->
::::: {.install #install-stan.jl-julia-pkg .hidden}
To install Stan.jl e.g. in the Julia REPL: `] add Stan`,
then use Conda.jl or conda to install CmdStan.

See [Stan.jl documentation](http://stanjulia.github.io/Stan.jl/v6.0/INSTALLATION.html) for further details.
:::::
::::: {.install #install-stan.jl-github-src .hidden}
Run `https://github.com/StanJulia/Stan.jl.git`,
then follow instructions in the README file.
:::::

::::
:::

<script src="installer.js"></script>



::: {.callout-note}
Conda simplifies the installation process by ensuring that all required libraries and tools are compatible with each other
and is available for Linux, Mac, and Windows platforms.

You can either install [miniconda](https://docs.conda.io/en/latest/miniconda.html), a free, minimal installer for conda
or you can get the full [Anaconda](https://docs.continuum.io/anaconda/) system
which provides graphical installer wizards for [MacOS](https://www.anaconda.com/products/distribution#macos){target="_blank"}
and [Windows](https://www.anaconda.com/products/distribution#windows){target="_blank"} users.

Julia users can install [Conda.jl](https://github.com/JuliaPy/Conda.jl){target="_blank"}.
:::

## Prerequisite:  C++17


Stan requires a C++17 compiler and the GNU Make utility.

* On Linux, these are bundled into the meta-package `build-essential`.
To install, run command:\
`sudo apt-get install build-essential`


* On Mac, these are included with Xcode.
Install Xcode from the App Store and then run command:\
`xcode-select --install`

* On Windows 10, we strongly recommend first installing Anaconda or miniconda and then using the conda installer to be CmdStanR or RStan,
since the conda packages include a C++ toolchain.\
Alternatively, R Users can get [Rtools](https://cran.r-project.org/bin/windows/Rtools/){target="_blank"} from CRAN,
or try to install it from within CmdStanR using the `install_toolchain` method.


## Local CmdStan installations for CmdStanPy, CmdStanR, and Stan.jl

CmdStanPy, CmdStanR and require a local CmdStan installation and provide scripts and methods to manage this.
The default installation location is in the user's home directory and is named `.cmdstan` (a hidden directory).
This directory contains one or more versions of CmdStan.
Both interfaces provide the following functions to manage the CmdStan installations:

* `install_cmdstan` - downloads, installs, and builds the latest CmdStan relese or specified release
* `rebuild_cmdstan` - rebuild the specified release.  On Mac, often required after an Xcode update.
* `show_versions` - shows all installed CmdStan versions
* `cmdstan_path` - shows which version of CmdStan is being used
* `set_cmdstan_path` - specify which version of CmdStan to use.

For Stan.jl, use Conda.jl or conda to install CmdStan.

## Other Stan Interfaces {#other-packages}

* Google Colab - prebuilt CmdStan binaries for Google Colab are available from the [GitHub CmdStan releases page](https://github.com/stan-dev/cmdstan/releases){target="_blank"}.

* MathematicaStan - available from GitHub repository:  https://github.com/stan-dev/MathematicaStan

* MatlabStan - installation instructions available on the [MatlabStan wiki](https://github.com/brian-lau/MatlabStan/wiki){target="_blank"}

* PyStan is available from via pip, run commmand:  `python -m pip install pystan`.

::: {.callout-note}
As of Release 3.10.0, PyStan is no longer being actively supported.
:::

## Troubleshooting

#### Windows locations

#### C++ Libraries fail to compile

- Boost
- Sundials
- TBB









